[0;34m[INFO][0m ðŸš€ Starting LinkOps Infrastructure Deployment
[0;34m[INFO][0m Checking prerequisites...
[0;32m[SUCCESS][0m All required tools are present
[0;34m[INFO][0m Checking Azure authentication...
[0;32m[SUCCESS][0m Authenticated to Azure
[0;34m[INFO][0m Subscription: Subscription 1 (e864a989-7282-4f8e-8ded-2b68911dcc95)
[0;34m[INFO][0m Initializing Terraform...
[0m[1mInitializing the backend...[0m
[0m[32m
Successfully configured the backend "azurerm"! Terraform will automatically
use this backend unless the backend configuration changes.[0m
[0m[1mInitializing provider plugins...[0m
- Finding hashicorp/azurerm versions matching "~> 3.70.0"...
- Finding hashicorp/helm versions matching "~> 2.11.0"...
- Using previously-installed hashicorp/azurerm v3.70.0
- Using previously-installed hashicorp/helm v2.11.0
Terraform has made some changes to the provider dependency selections recorded
in the .terraform.lock.hcl file. Review those changes and commit them to your
version control system if they represent changes you intended to make.

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
[0;32m[SUCCESS][0m Terraform initialized
[0;34m[INFO][0m Planning Terraform deployment...
[0;34m[INFO][0m Checking for stale Terraform state lock...
Usage: terraform [global options] force-unlock LOCK_ID

  Manually unlock the state for the defined configuration.

  This will not modify your infrastructure. This command removes the lock on the
  state for the current workspace. The behavior of this lock is dependent
  on the backend being used. Local state files cannot be unlocked by another
  process.

Options:

  -force                 Don't ask for input for unlock confirmation.
Acquiring state lock. This may take a few moments...
[0m[1mazurerm_resource_group.main: Refreshing state... [id=/subscriptions/e864a989-7282-4f8e-8ded-2b68911dcc95/resourceGroups/linkops-rg][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # azurerm_kubernetes_cluster.main[0m will be created
[0m  [32m+[0m[0m resource "azurerm_kubernetes_cluster" "main" {
      [32m+[0m[0m api_server_authorized_ip_ranges     = (known after apply)
      [32m+[0m[0m dns_prefix                          = "linkops"
      [32m+[0m[0m fqdn                                = (known after apply)
      [32m+[0m[0m http_application_routing_zone_name  = (known after apply)
      [32m+[0m[0m id                                  = (known after apply)
      [32m+[0m[0m image_cleaner_enabled               = false
      [32m+[0m[0m image_cleaner_interval_hours        = 48
      [32m+[0m[0m kube_admin_config                   = (sensitive value)
      [32m+[0m[0m kube_admin_config_raw               = (sensitive value)
      [32m+[0m[0m kube_config                         = (sensitive value)
      [32m+[0m[0m kube_config_raw                     = (sensitive value)
      [32m+[0m[0m kubernetes_version                  = (known after apply)
      [32m+[0m[0m location                            = "eastus"
      [32m+[0m[0m name                                = "linkops-aks"
      [32m+[0m[0m node_resource_group                 = (known after apply)
      [32m+[0m[0m node_resource_group_id              = (known after apply)
      [32m+[0m[0m oidc_issuer_url                     = (known after apply)
      [32m+[0m[0m portal_fqdn                         = (known after apply)
      [32m+[0m[0m private_cluster_enabled             = false
      [32m+[0m[0m private_cluster_public_fqdn_enabled = false
      [32m+[0m[0m private_dns_zone_id                 = (known after apply)
      [32m+[0m[0m private_fqdn                        = (known after apply)
      [32m+[0m[0m public_network_access_enabled       = true
      [32m+[0m[0m resource_group_name                 = "linkops-rg"
      [32m+[0m[0m role_based_access_control_enabled   = true
      [32m+[0m[0m run_command_enabled                 = true
      [32m+[0m[0m sku_tier                            = "Free"
      [32m+[0m[0m tags                                = {
          [32m+[0m[0m "environment" = "linkops"
        }
      [32m+[0m[0m workload_identity_enabled           = false

      [32m+[0m[0m api_server_access_profile (known after apply)

      [32m+[0m[0m auto_scaler_profile (known after apply)

      [32m+[0m[0m default_node_pool {
          [32m+[0m[0m kubelet_disk_type    = (known after apply)
          [32m+[0m[0m max_pods             = (known after apply)
          [32m+[0m[0m name                 = "default"
          [32m+[0m[0m node_count           = 2
          [32m+[0m[0m node_labels          = (known after apply)
          [32m+[0m[0m orchestrator_version = (known after apply)
          [32m+[0m[0m os_disk_size_gb      = (known after apply)
          [32m+[0m[0m os_disk_type         = "Managed"
          [32m+[0m[0m os_sku               = (known after apply)
          [32m+[0m[0m scale_down_mode      = "Delete"
          [32m+[0m[0m type                 = "VirtualMachineScaleSets"
          [32m+[0m[0m ultra_ssd_enabled    = false
          [32m+[0m[0m vm_size              = "Standard_DS2_v2"
          [32m+[0m[0m workload_runtime     = (known after apply)
        }

      [32m+[0m[0m identity {
          [32m+[0m[0m principal_id = (known after apply)
          [32m+[0m[0m tenant_id    = (known after apply)
          [32m+[0m[0m type         = "SystemAssigned"
        }

      [32m+[0m[0m kubelet_identity (known after apply)

      [32m+[0m[0m network_profile {
          [32m+[0m[0m dns_service_ip     = "10.0.2.10"
          [32m+[0m[0m docker_bridge_cidr = (known after apply)
          [32m+[0m[0m ip_versions        = (known after apply)
          [32m+[0m[0m load_balancer_sku  = "standard"
          [32m+[0m[0m network_mode       = (known after apply)
          [32m+[0m[0m network_plugin     = "azure"
          [32m+[0m[0m network_policy     = "azure"
          [32m+[0m[0m outbound_type      = "loadBalancer"
          [32m+[0m[0m pod_cidr           = (known after apply)
          [32m+[0m[0m pod_cidrs          = (known after apply)
          [32m+[0m[0m service_cidr       = "10.0.2.0/24"
          [32m+[0m[0m service_cidrs      = (known after apply)

          [32m+[0m[0m load_balancer_profile (known after apply)

          [32m+[0m[0m nat_gateway_profile (known after apply)
        }

      [32m+[0m[0m oms_agent {
          [32m+[0m[0m log_analytics_workspace_id = (known after apply)
          [32m+[0m[0m oms_agent_identity         = (known after apply)
        }

      [32m+[0m[0m windows_profile (known after apply)
    }

[1m  # azurerm_kubernetes_cluster_node_pool.system[0m will be created
[0m  [32m+[0m[0m resource "azurerm_kubernetes_cluster_node_pool" "system" {
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m kubelet_disk_type     = (known after apply)
      [32m+[0m[0m kubernetes_cluster_id = (known after apply)
      [32m+[0m[0m max_pods              = (known after apply)
      [32m+[0m[0m mode                  = "System"
      [32m+[0m[0m name                  = "systemnp"
      [32m+[0m[0m node_count            = 1
      [32m+[0m[0m node_labels           = (known after apply)
      [32m+[0m[0m orchestrator_version  = (known after apply)
      [32m+[0m[0m os_disk_size_gb       = (known after apply)
      [32m+[0m[0m os_disk_type          = "Managed"
      [32m+[0m[0m os_sku                = (known after apply)
      [32m+[0m[0m os_type               = "Linux"
      [32m+[0m[0m priority              = "Regular"
      [32m+[0m[0m scale_down_mode       = "Delete"
      [32m+[0m[0m spot_max_price        = -1
      [32m+[0m[0m ultra_ssd_enabled     = false
      [32m+[0m[0m vm_size               = "Standard_DS2_v2"
    }

[1m  # azurerm_log_analytics_workspace.main[0m will be created
[0m  [32m+[0m[0m resource "azurerm_log_analytics_workspace" "main" {
      [32m+[0m[0m allow_resource_only_permissions = true
      [32m+[0m[0m daily_quota_gb                  = -1
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m internet_ingestion_enabled      = true
      [32m+[0m[0m internet_query_enabled          = true
      [32m+[0m[0m local_authentication_disabled   = false
      [32m+[0m[0m location                        = "eastus"
      [32m+[0m[0m name                            = "linkops-logs"
      [32m+[0m[0m primary_shared_key              = (sensitive value)
      [32m+[0m[0m resource_group_name             = "linkops-rg"
      [32m+[0m[0m retention_in_days               = 30
      [32m+[0m[0m secondary_shared_key            = (sensitive value)
      [32m+[0m[0m sku                             = "PerGB2018"
      [32m+[0m[0m tags                            = {
          [32m+[0m[0m "Environment" = "demo"
          [32m+[0m[0m "Project"     = "linkops"
        }
      [32m+[0m[0m workspace_id                    = (known after apply)
    }

[1m  # azurerm_subnet.aks[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "aks" {
      [32m+[0m[0m address_prefixes                               = [
          [32m+[0m[0m "10.0.1.0/24",
        ]
      [32m+[0m[0m enforce_private_link_endpoint_network_policies = (known after apply)
      [32m+[0m[0m enforce_private_link_service_network_policies  = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m name                                           = "aks-subnet"
      [32m+[0m[0m private_endpoint_network_policies_enabled      = (known after apply)
      [32m+[0m[0m private_link_service_network_policies_enabled  = (known after apply)
      [32m+[0m[0m resource_group_name                            = "linkops-rg"
      [32m+[0m[0m virtual_network_name                           = "linkops-vnet"
    }

[1m  # azurerm_virtual_network.main[0m will be created
[0m  [32m+[0m[0m resource "azurerm_virtual_network" "main" {
      [32m+[0m[0m address_space       = [
          [32m+[0m[0m "10.0.0.0/16",
        ]
      [32m+[0m[0m dns_servers         = (known after apply)
      [32m+[0m[0m guid                = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "eastus"
      [32m+[0m[0m name                = "linkops-vnet"
      [32m+[0m[0m resource_group_name = "linkops-rg"
      [32m+[0m[0m subnet              = (known after apply)
      [32m+[0m[0m tags                = {
          [32m+[0m[0m "Environment" = "demo"
          [32m+[0m[0m "Project"     = "linkops"
        }
    }

[1mPlan:[0m 5 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m aks_cluster_fqdn    = (known after apply)
  [32m+[0m[0m aks_cluster_name    = "linkops-aks"
  [32m+[0m[0m aks_subnet_id       = (known after apply)
  [32m+[0m[0m client_certificate  = (sensitive value)
  [32m+[0m[0m kube_config_raw     = (sensitive value)
  [32m+[0m[0m vnet_id             = (known after apply)
  [32m+[0m[0m vnet_name           = "linkops-vnet"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Saved the plan to: tfplan

To perform exactly these actions, run the following command to apply:
    terraform apply "tfplan"
Releasing state lock. This may take a few moments...
[0;32m[SUCCESS][0m Terraform plan created
[1;33m[WARNING][0m Review the plan before applying

Proceed with deployment? (y/N): 
[0;34m[INFO][0m Applying Terraform deployment...
Acquiring state lock. This may take a few moments...
[0m[1mazurerm_log_analytics_workspace.main: Creating...[0m[0m
[0m[1mazurerm_virtual_network.main: Creating...[0m[0m
[0m[1mazurerm_log_analytics_workspace.main: Still creating... [00m10s elapsed][0m[0m
[0m[1mazurerm_log_analytics_workspace.main: Still creating... [00m19s elapsed][0m[0m
[0m[1mazurerm_log_analytics_workspace.main: Still creating... [00m29s elapsed][0m[0m
[0m[1mazurerm_log_analytics_workspace.main: Creation complete after 34s [id=/subscriptions/e864a989-7282-4f8e-8ded-2b68911dcc95/resourceGroups/linkops-rg/providers/Microsoft.OperationalInsights/workspaces/linkops-logs][0m
[0m[1mazurerm_kubernetes_cluster.main: Creating...[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mcreating/updating Virtual Network (Subscription: "e864a989-7282-4f8e-8ded-2b68911dcc95"
[31mâ”‚[0m [0mResource Group Name: "linkops-rg"
[31mâ”‚[0m [0mVirtual Network Name: "linkops-vnet"): network.VirtualNetworksClient#CreateOrUpdate: Failure sending request: StatusCode=409 -- Original Error: Code="MissingSubscriptionRegistration" Message="The subscription is not registered to use namespace 'Microsoft.Network'. See https://aka.ms/rps-not-found for how to register subscriptions." Details=[{"code":"MissingSubscriptionRegistration","message":"The subscription is not registered to use namespace 'Microsoft.Network'. See https://aka.ms/rps-not-found for how to register subscriptions.","target":"Microsoft.Network"}][0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  with azurerm_virtual_network.main,
[31mâ”‚[0m [0m  on main.tf line 8, in resource "azurerm_virtual_network" "main":
[31mâ”‚[0m [0m   8: resource "azurerm_virtual_network" "main" [4m{[0m[0m
[31mâ”‚[0m [0m
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mcreating Kubernetes Cluster (Subscription: "e864a989-7282-4f8e-8ded-2b68911dcc95"
[31mâ”‚[0m [0mResource Group Name: "linkops-rg"
[31mâ”‚[0m [0mKubernetes Cluster Name: "linkops-aks"): managedclusters.ManagedClustersClient#CreateOrUpdate: Failure sending request: StatusCode=0 -- Original Error: Code="NoRegisteredProviderFound" Message="No registered resource provider found for location 'eastus' and API version '2023-04-02-preview' for type 'managedClusters'. The supported api-versions are '2017-08-31, 2018-03-31, 2019-02-01, 2019-04-01, 2019-06-01, 2019-08-01, 2019-10-01, 2019-11-01, 2020-01-01, 2020-02-01, 2020-03-01, 2020-04-01, 2020-06-01, 2020-07-01, 2020-09-01, 2020-11-01, 2020-12-01, 2021-02-01, 2021-03-01, 2021-05-01, 2021-07-01, 2021-08-01, 2021-09-01, 2021-10-01, 2022-01-01, 2022-02-01, 2022-03-01, 2022-04-01, 2022-06-01, 2022-07-01, 2022-08-01, 2022-09-01, 2022-11-01, 2023-01-01, 2023-02-01, 2023-03-01, 2023-04-01, 2023-05-01, 2023-06-01, 2023-07-01, 2023-08-01, 2023-09-01, 2023-09-02-preview, 2023-10-01, 2023-10-02-preview, 2023-11-01, 2023-11-02-preview, 2024-01-01, 2024-01-02-preview, 2024-02-01, 2024-02-02-preview, 2024-03-02-preview, 2024-04-02-preview, 2024-05-01, 2024-05-02-preview, 2024-06-01, 2024-06-02-preview, 2024-07-01, 2024-07-02-preview, 2024-08-01, 2024-08-02-preview, 2024-09-01, 2024-09-02-preview, 2024-10-01, 2024-10-02-preview, 2025-01-01, 2025-01-02-preview, 2025-02-01, 2025-02-02-preview, 2025-03-01, 2025-03-02-preview, 2025-04-01, 2025-04-02-preview, 2025-05-01, 2025-05-02-preview'. The supported locations are 'australiacentral, australiacentral2, australiaeast, australiasoutheast, brazilsouth, brazilsoutheast, canadacentral, canadaeast, centralindia, centralus, chilecentral, eastasia, eastus, eastus2, francecentral, francesouth, germanynorth, germanywestcentral, indonesiacentral, israelcentral, italynorth, japaneast, japanwest, jioindiacentral, jioindiawest, koreacentral, koreasouth, malaysiawest, mexicocentral, newzealandnorth, northcentralus, northeurope, norwayeast, norwaywest, polandcentral, qatarcentral, southafricanorth, southafricawest, southcentralus, southindia, southeastasia, spaincentral, swedencentral, switzerlandnorth, switzerlandwest, uaecentral, uaenorth, uksouth, ukwest, westcentralus, westeurope, westus, westus2, westus3'."[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  with azurerm_kubernetes_cluster.main,
[31mâ”‚[0m [0m  on main.tf line 29, in resource "azurerm_kubernetes_cluster" "main":
[31mâ”‚[0m [0m  29: resource "azurerm_kubernetes_cluster" "main" [4m{[0m[0m
[31mâ”‚[0m [0m
[31mâ•µ[0m[0m
Releasing state lock. This may take a few moments...
